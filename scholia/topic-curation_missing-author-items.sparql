PREFIX bd: <http://www.bigdata.com/rdf#>
PREFIX cc: <http://creativecommons.org/ns#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX ontolex: <http://www.w3.org/ns/lemon/ontolex#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX pqn: <http://www.wikidata.org/prop/qualifier/value-normalized/>
PREFIX pqv: <http://www.wikidata.org/prop/qualifier/value/>
PREFIX pr: <http://www.wikidata.org/prop/reference/>
PREFIX prn: <http://www.wikidata.org/prop/reference/value-normalized/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX prv: <http://www.wikidata.org/prop/reference/value/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX psn: <http://www.wikidata.org/prop/statement/value-normalized/>
PREFIX psv: <http://www.wikidata.org/prop/statement/value/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdata: <http://www.wikidata.org/wiki/Special:EntityData/>
PREFIX wdno: <http://www.wikidata.org/prop/novalue/>
PREFIX wdref: <http://www.wikidata.org/reference/>
PREFIX wds: <http://www.wikidata.org/entity/statement/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wdtn: <http://www.wikidata.org/prop/direct-normalized/>
PREFIX wdv: <http://www.wikidata.org/value/>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX target: <http://www.wikidata.org/entity/{{ q }}>

SELECT
  # Number of works with the author
  ?count

  # Author score - 3 points for authoring a work, 1 for being cited
  ?score

  # Author as a string
  ?author

  # Build URL to the Author disambiguator tool
  (CONCAT(
      'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',
      ENCODE_FOR_URI(?author)) AS ?resolver_url)

# Generate a score for each author

WHERE {
  {
  SELECT
    (COUNT(?work) AS ?count)
    ?author
  WHERE {
    {
  SELECT DISTINCT ?work WHERE {
    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .
  }
  LIMIT 10000
}   ?work wdt:P2093 ?author .
  }
  GROUP BY ?author
} {
  SELECT (SUM(?score_) AS ?score) ?author
  WHERE {
    {
      # Assign them 3 points if they are an author of a work on the subject
      SELECT (3 AS ?score_) ?author ?work WHERE {
        ?work wdt:P2093 ?author .
        ?work wdt:P921/wdt:P279* target: .
      }
    }
    UNION
    {
      # Assign them 1 point if they are the author of a work that is cited by a work on the subject
      SELECT (1 AS ?score_) ?author ?work WHERE {
        ?work wdt:P2093 ?author .
        ?citing_work wdt:P2860 ?work .
        ?citing_work wdt:P921/wdt:P279* target: .
      }
    }
  }
  GROUP BY ?author
}  # Label the result
  
}
ORDER BY DESC(?count) DESC(?score)
LIMIT 200
